apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.dlsd.property"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 5
        versionName "1.0.5"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.dlsd.property",
                JPUSH_APPKEY : "6ed866071d445aee3ee1bea1", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    signingConfigs {
        release {
            storeFile file("key.jks")
            storePassword "112233"
            keyAlias "key"
            keyPassword "112233"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled true;
    }
    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    //图片选择  压缩
    implementation 'com.zhihu.android:matisse:0.5.2-beta4'
    implementation 'top.zibin:Luban:1.1.8'
    //网络请求
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.google.code.gson:gson:2.6.2'
    //分包
    implementation 'androidx.multidex:multidex:2.0.0'
    //
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    //图片加载
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    //广告轮播
    implementation 'com.youth.banner:banner:1.4.10'
    api('com.alibaba.android:ultraviewpager:1.0.7.7@aar') {
        transitive = true
    }
    //支付
    implementation(name: 'alipaySdk-15.7.4-20200228192259', ext: 'aar')
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation project(path: ':iOS_Dialog_Library')
    //日志
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    //验证码自动填充
    implementation 'com.github.gongw:verifycodeview:1.0.2'

    implementation "io.reactivex.rxjava2:rxjava:2.2.2"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation 'androidx.core:core:1.0.0+'

    implementation 'com.contrarywind:Android-PickerView:4.1.9'

}
